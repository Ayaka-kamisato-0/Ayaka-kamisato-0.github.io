{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My page","text":""},{"location":"#click-here-to-download","title":"click here to download","text":"<p>Download the app</p> <p>\u5927\u4e00\u4e00\u4e9b\u7410\u788e\u7684\u751f\u6d3b\u5207\u7247\u4ee5\u53ca\u81ea\u5df1\u7684\u4e00\u4e9b\u60f3\u6cd5</p> <p>\u4e0d\u5b9a\u671f\u6389\u843d\u4e00\u4e9b\u788e\u788e\u5ff5</p>"},{"location":"#_1","title":"\u5927\u4e00\u4e0b\u6d41\u6c34\u8d26","text":"<p>\u622a\u81f324\u5e746\u670828\u65e5\uff1a po\u662f\u4e00\u4f4d\u5927\u4e00\u7ed3\u675f\u5373\u5c06\u5347\u5927\u4e8c\u7684zju\u8ba1\u79d1\u5e73\u6c11\u3002\u56de\u987e\u8fc7\u53bb\u7684\u4e00\u5e74\uff0c\u6709\u4e9b\u503c\u5f97\u4e00\u63d0\u7684\u611f\u609f\u4e0e\u601d\u8003\uff0c\u6545\u800c\u6709\u4e86\u8fd9\u7bc7\u6587\u7ae0</p> <p></p>"},{"location":"#_2","title":"\u8f6c\u4e13\u4e1a","text":"<p>po\u9ad8\u8003\u53d1\u6325\u5931\u5e38\u6765\u4e86ZJU\uff08\u975e\u4e3b\u4ee3\u7801\uff0c\u6b63\u5e38\u53d1\u6325\u5c31\u662f\u4e3b\u4ee3\u7801\u6c34\u5e73\uff09\u3002\u5bd2\u5047\u53c2\u52a0\u9009\u62d4\u8fdb\u5165\u4e86\u7af9\u9662\uff0c\u5927\u4e00\u4e0b\u7684\u534a\u671f\u4e13\u4e1a\u786e\u8ba4\u5230\u8ba1\u79d1\u3002\u8fd9\u4e00\u5e74\u6765\u56e0\u4e3a\u4e13\u4e1a\u7684\u4e0d\u786e\u5b9a\u7ecf\u5386\u4e86\u4e0d\u5c11\u4e8b\u60c5\uff0c\u6700\u540e\u6709\u60ca\u65e0\u9669\u786e\u8ba4\u6210\u529f\uff0c\u4e5f\u7b97\u662f\u633d\u56de\u4e86\u4e00\u4e9b\u5f53\u5e74\u9ad8\u8003\u7684\u9057\u61be\uff0c\u9042\u603b\u7ed3\u4e86\u4e00\u4e9b\u7ecf\u9a8c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002</p>"},{"location":"#_3","title":"\u8f6c\u4e13\u4e1a\u6218\u62a5","text":"<p>ZJU\u7684\u8f6c\u4e13\u4e1a\u653f\u7b56\u6574\u4f53\u76f8\u5bf9\u81ea\u7531\uff0c\u6ca1\u6709\u5f3a\u5236\u8981\u6c42\u539f\u4e13\u4e1a\u524d\u767e\u5206\u4e4b\u591a\u5c11\u624d\u80fd\u8f6c\uff08\u90e8\u5206\u4e13\u4e1a\u6709\u8868\u5237\u4f46\u8981\u6c42\u5e76\u4e0d\u9ad8\uff09\uff0c\u52a0\u4e0a\u5927\u4e00\u7684\u4e13\u4e1a\u8bfe\u5360\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u5efa\u8bae\u6709\u60f3\u6cd5\u4e14\u6210\u7ee9\u5c1a\u53ef\u7684\u540c\u5b66\u90fd\u53bb\u8bd5\u4e00\u8bd5\u3002\uff08\u9644\u8f6c\u4e13\u4e1a\u6218\u62a5\uff09  </p> <p>\u5f53\u7136\u5bf9\u4e8e\u65b0\u540c\u5b66\u800c\u8a00\u8fd9\u5f20\u56fe\u53c2\u8003\u610f\u4e49\u4e0d\u5927\uff0c\u5982\u679c\u4e0d\u4e86\u89e3\u60c5\u51b5\u53ef\u80fd\u4f1a\u5f97\u51fa\u4e0d\u6b63\u786e\u7684\u7ed3\u8bba\uff0c\u6240\u4ee5\u4ec5\u4f9b\u53c2\u8003\u3002</p>"},{"location":"#_4","title":"\u4e8b\u4ef6\u8282\u70b9","text":"<p>\u4ee5\u4e0b\u662fpo\u8fd9\u5c4a\u7684\u653f\u7b56\uff0c\u8bf7\u540c\u5b66\u4eec\u53ca\u65f6\u8ddf\u8fdb\u6700\u65b0\u653f\u7b56</p> <p>\u6c42\u662f\u5b66\u9662\uff1a</p> <p>1.\u7b2c\u4e00\u8f6e\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\uff1a\u53ea\u80fd\u5728\u62db\u751f\u5927\u7c7b\u4ee5\u5185\u786e\u8ba4\uff0c\u5982\u5de5\u8bd5\uff0c\u5de5\u4fe1</p> <p>2.\u7b2c\u4e8c\u8f6e\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\uff1a\u53ef\u4ee5\u8de8\u5927\u7c7b\u786e\u8ba4\uff0c\u4f46\u662f\u5bf9\u4e8e\u65b0\u9ad8\u8003\u5730\u533a\u53ea\u80fd\u9ad8\u8f6c\u4f4e\uff08\u53ea\u80fd\u7531\u5f55\u53d6\u5206\u9ad8\u7684\u5927\u7c7b\u8f6c\u5230\u5f55\u53d6\u5206\u4f4e\u7684\u5927\u7c7b\uff09\uff0c\u5bf9\u8001\u9ad8\u8003\u5730\u533a\u65e0\u9ad8\u8f6c\u4f4e\u9650\u5236\u3002</p> <p>3.\u5bd2\u5047\u8f6c\u4e13\u4e1a\uff1a\u5b9e\u9645\u4e0a\u662f\u5728\u5927\u4e00\u4e0b\u5b66\u671f\u521d\u8f6c\uff0c\u672c\u6b21\u8f6c\u4e13\u4e1a\u4e0d\u770b\u9ad8\u8003\u6210\u7ee9\uff0c\u4e3b\u8981\u770b\u5927\u4e00\u4e0a\u7ee9\u70b9\u4e0e\u9762\u8bd5\u8868\u73b0 \u540e\u7eed\u8fd8\u6709\u4e09\u6b21\u5047\u671f\u8f6c\u4e13\u4e1a\u673a\u4f1a\uff0c\u76f4\u5230\u5927\u4e09\u4e0a\u3002</p> <p>\u7af9\u9662\uff1a</p> <p>1.\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\uff1a\u5927\u4e00\u590f\u5b66\u671f</p> <p>2.\u8f6c\u4e13\u4e1a\uff1a\u5927\u4e00\u6691\u5047\uff0c\u5927\u4e8c\u5bd2\u5047\uff0c\u5927\u4e8c\u6691\u5047\u5171\u4e09\u6b21\u8f6c\u4e13\u4e1a\u673a\u4f1a</p> <p>\u7af9\u9662\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\u89c4\u5219\u4e0e\u6c42\u662f\u5b66\u9662\u7b2c\u4e8c\u6b21\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\u653f\u7b56\u7c7b\u4f3c\uff0c\u4f9d\u7136\u6709\u9ad8\u8f6c\u4f4e\u7684\u9650\u5236\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u7af9\u9662\u5b66\u751f\u8f6c\u4e13\u4e1a\u4e0d\u5360\u4f59\u91cf\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u53ef\u4ee5\u4efb\u8f6c\uff0c\u53ea\u662f\u8bf4\u8f6c\u4e13\u4e1a\u4f1a\u66f4\u5bb9\u6613\u4e9b\uff0c\u4f46\u5177\u4f53\u5bb9\u6613\u591a\u5c11\u4e0d\u597d\u91cf\u5316\uff0c\u5e76\u4e14\u7af9\u9662\u4e13\u4e1a\u786e\u8ba4\u65f6\u95f4\u4ece\u6211\u4eec\u8fd9\u4e00\u5c4a\u5f00\u59cb\u5ef6\u540e\u4e86\uff08\u6ce8\uff1a\u6c42\u79d1\u9664\u5916\uff0c\u6c42\u79d1\u5927\u4e00\u4e0a\u5c31\u786e\u8ba4\u4e3b\u4fee\u4e13\u4e1a\uff0c\u53ef\u4ee5\u53c2\u52a0\u5bd2\u5047\u8f6c\u4e13\u4e1a\uff09\uff0c\u6240\u4ee5\u6709\u5229\u6709\u5f0a\u5427\u3002 \u6211\u89c9\u5f97\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u524d\u8005\u662f\u5b58\u91cf\u7ade\u4e89\uff0c\u5982\u679c\u5176\u4ed6\u540c\u5b66\u592a\u5389\u5bb3\u5c31\u7b97\u4f60\u4e5f\u5f88\u4e0d\u9519\u4e5f\u53ef\u80fd\u843d\u9009\uff1b\u540e\u8005\u662f\u5411\u8001\u5e08\u8bc1\u660e\u81ea\u5df1\u6709\u80fd\u529b\u5b66\u597d\uff0c\u53ea\u8981\u8001\u5e08\u80fd\u770b\u5230\u4f60\u7684\u6f5c\u529b\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4e13\u4e1a\u5b66\u597d\u5c31\u4f1a\u8ba9\u4f60\u8fdb\uff0c\u6211\u4e86\u89e3\u5230\u7684\u7af9\u9662\u88ab\u62d2\u62d2\u5927\u591a\u662f\u7ee9\u70b9\u4e0d\u591f\u53c8\u60f3\u8981\u9760\u7740\u7af9\u7684\u8eab\u4efd\u8f6c\u5165\u800c\u88ab\u62d2\u7684\uff0c\u4e0d\u5360\u4f59\u91cf\u5e76\u4e0d\u662f\u5b89\u5fc3\u8eba\u5e73\u7684\u4fdd\u969c\u3002</p>"},{"location":"#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1.\u9009\u8bfe\uff1a \u9009\u8bfe\u4e0e\u7ee9\u70b9\u8981\u6c42 \u8f6c\u4e13\u4e1a\u5fc5\u987b\u6ee1\u8db3\u5bf9\u5e94\u4e13\u4e1a\u7684\u8bfe\u7a0b\u4e0e\u7ee9\u70b9\u8981\u6c42\uff0c\u5176\u4e2dH\u8bfe\u7a0b\u53ef\u4ee5\u5e73\u66ff\u540c\u540d\u7684\u7532/\u4e59\u8bfe\u7a0b\uff08i.e.\u5fae\u79ef\u5206H-&gt;\u5fae\u79ef\u5206\u7532/\u4e59\uff0c\u4f46\u5fae\u79ef\u5206H\u4e0d\u80fd\u8986\u76d6\u6570\u5b66\u5206\u6790\uff09</p> <p>2.\u7ee9\u70b9\uff1a \u4e0a\u8ff0\u6587\u4ef6\u4e2d\u7684\u7ee9\u70b9\u53ea\u662f\u57fa\u672c\u8981\u6c42\uff0c\u4e13\u4e1a\u7ade\u4e89\u8d8a\u6fc0\u70c8\u7ee9\u70b9\u8981\u6c42\u8d8a\u9ad8\uff0c\u6240\u4ee5\u8981\u91cf\u529b\u800c\u884c\u3002\u8001\u5e08\u4e3b\u8981\u770b\u786c\u8bfe\u7ee9\u70b9\uff08\u5fae\u79ef\u5206\uff0c\u7ebf\u6027\u4ee3\u6570\uff0cC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u5b9e\u9a8c\uff0c\u5de5\u56fe\u7b49\uff0c\u5982\u679c\u662f\u540e\u9762\u4e09\u6b21\u8f6c\u4e13\u4e1a\u5e94\u8be5\u8fd8\u5305\u542b\u4e13\u4e1a\u8bfe\uff09\u3002po\u662f4.8+\u8f6c\u7684\uff0c\u5982\u679c\u4f60\u60f3\u51b2\u6700\u70ed\u95e8\u7684\u51e0\u4e2a\u4e13\u4e1a\u90a3\u6700\u597d\u786c\u8bfe\u5168\u6ee1\u7ee9\u6216\u63a5\u8fd1\u6ee1\u7ee9\uff0c\u6bd4\u8f83\u70ed\u95e8\u7684\u4fdd\u8bc1\u786c\u8bfe4.5+\u3002</p> <p>3.\u9762\u8bd5\uff1a \u8003\u5bdf\u4f60\u5bf9\u4e13\u4e1a\u7684\u8ba4\u8bc6\u4e0e\u4e86\u89e3\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\u4f60\u4e4b\u524d\u7684\u7ecf\u5386\uff08\u6bd4\u5982\u5b66\u79d1\u7ade\u8d5b\uff09\uff0c\u81f3\u4e8e\u4e13\u4e1a\u77e5\u8bc6\u561b\u5176\u5b9e\u90fd\u662f\u53ef\u4ee5\u901f\u6210\u7684\uff0c\u603b\u4e4b\u5c3d\u91cf\u7ed9\u8001\u5e08\u7559\u4e0b\u4e00\u4e2a\u597d\u5370\u8c61\u3002</p>"},{"location":"#_6","title":"\u7b56\u7565\uff1a\u6211\u5e94\u8be5\u8f6c\u4e13\u4e1a\u5417\uff1f","text":"<p>1.\u5982\u679c\u4f60\u5bf9\u5f53\u524d\u4e13\u4e1a\u6bd4\u8f83\u6ee1\u610f\uff0c\u4f46\u60f3\u8981\u6311\u6218\u66f4\u597d\u7684\u66f4\u5fc3\u4eea\u7684\u4e13\u4e1a\uff0c\u90a3\u4e48\u5efa\u8bae\u53c2\u52a0\u5927\u4e00\u5bd2\u5047\u7684\u8f6c\u4e13\u4e1a\u3002\u56e0\u4e3a\u5927\u4e00\u4e0a\u5927\u591a\u6570\u4e13\u4e1a\u7684\u57fa\u7840\u8bfe\u7a0b\u662f\u91cd\u53e0\u7684\uff08\u81f3\u5c11\u6cdb\u5de5\u79d1\u662f\u8fd9\u6837\uff0c\u4f46\u519c\u5b66\uff0c\u533b\u5b66\uff0c\u4eba\u6587\u7c7b\u7684\u6709\u8f83\u5927\u533a\u522b\uff09\uff0c\u6240\u4ee5\u4e0d\u7528\u523b\u610f\u8c03\u6574\u9009\u8bfe\uff0c\u8f6c\u4e13\u4e1a\u5931\u8d25\u4e5f\u6ca1\u4ec0\u4e48\u4ee3\u4ef7\u3002</p> <p>2.\u5982\u679c\u4f60\u4e0d\u662f\u5f88\u6ee1\u610f\u5f53\u524d\u4e13\u4e1a\uff0c\u4e0b\u5b9a\u51b3\u5fc3\u8981\u8f6c\u6216\u8005\u60f3\u8f6c\u7684\u4e13\u4e1a\u8de8\u5ea6\u5927\uff0c\u4e13\u4e1a\u8bfe\u91cd\u5408\u5ea6\u4f4e\uff1a</p> <p>\u9996\u5148\u662f\u9009\u8bfe\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u8981\u5927\u5e45\u8c03\u6574\u4f60\u7684\u8bfe\u8868\u9009\u62e9\u9009\u62e9\u76ee\u6807\u4e13\u4e1a\u7684\u8bfe\u7a0b\uff0c\u6bd4\u5982\u60f3\u53bb\u6570\u5b66\u90a3\u5fae\u79ef\u5206\u5c31\u5fc5\u987b\u5347\u7ea7\u4e3a\u6570\u5b66\u5206\u6790\uff08\u8fd9\u4fe9\u96be\u5ea6\u4e0d\u5728\u4e00\u4e2a\u91cf\u7ea7\u4e0a\uff09\uff0c\u7ebf\u6027\u4ee3\u6570\u5347\u7ea7\u4e3a\u9ad8\u7b49\u4ee3\u6570\uff08\u5f53\u7136\u5982\u679c\u539f\u4e13\u4e1a\u4e0d\u5b66\u7ebf\u4ee3\u90a3\u4e5f\u8981\u628a\u9ad8\u4ee3\u9009\u4e0a\uff09</p> <p>\u7136\u800c\u968f\u4e4b\u800c\u6765\u7684\u5c31\u662f\u4e0d\u786e\u5b9a\u6027\uff1a\u5982\u679c\u8f6c\u4e0d\u6210\u529f\uff0c\u90a3\u4e48\u4f60\u7684\u60c5\u51b5\u4f1a\u5f88\u88ab\u52a8\u3002\u4f60\u5f53\u7136\u53ef\u4ee5\u6536\u83b7\u66f4\u591a\u7684\u77e5\u8bc6\uff08\uff09\uff0c\u4f46\u529f\u5229\u5730\u8bb2\u8fd9\u4e9b\u591a\u5b66\u7684\u6216\u8005\u66f4\u9ad8\u96be\u5ea6\u7684\u8bfe\u5c31\u5bb9\u6613\u6210\u4e3a\u6c89\u6ca1\u6210\u672c\uff0c\u800c\u4e14\u4e00\u822c\u60c5\u51b5\u4e0b\u8f6c\u4e0d\u6210\u529f\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8bfe\u7684\u6210\u7ee9\u4e0d\u7406\u60f3\u963b\u788d\u4e86\u8f6c\u4e13\u4e1a\u3002\u6b64\u65f6\u4f60\u8981\u4e48\u7ee7\u7eed\u8ddf\u7740\u76ee\u6807\u4e13\u4e1a\u7684\u57f9\u517b\u65b9\u6848\u8d70\uff0c\u8981\u4e48\u53ca\u65f6\u6b62\u635f\u9009\u62e9\u7559\u5728\u672c\u4e13\u4e1a\u6216\u8005\u9009\u62e9\u5176\u4ed6\u53ef\u80fd\u7684\u4e13\u4e1a\u3002</p> <p>\u800c\u4e14\u8fd8\u8981\u7279\u522b\u6ce8\u610f\u8f6c\u4e13\u4e1a\u8981\u6c42\u4e86\u8fd9\u4e9b\u8bfe\u5e76\u4e0d\u4ee3\u8868\u4f60\u53ea\u9700\u8981\u4e0a\u8fd9\u4e9b\u8bfe\uff0c\u6bd4\u5982\u4e0a\u8ff0\u6587\u4ef6\u4e2djk\u5927\u4e00\u6691\u5047\u8f6c\u4e13\u4e1a\u8bfe\u7a0b\u4fee\u8bfb\u57fa\u672c\u8981\u6c42\u662f4\u90092\uff0c\u4f46\u662f\u5982\u679c\u4f604\u90092\u7684\u8bdd\u5c31\u53ea\u662f\u6ee1\u8db3\u4e86\u57fa\u672c\u8981\u6c42\uff0c\u56e0\u4e3ajk\u7684\u6b63\u5e38\u8fdb\u5ea6\u662f\u5927\u4e00\u4e0b\u56db\u95e8\u5168\u5b66\u5b8c\u8fd8\u52a0\u4e00\u4e2a\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u3002\u771f\u6b63\u4e0b\u5b9a\u51b3\u5fc3\u8f6c\uff0c\u6700\u597d\u5c3d\u53ef\u80fd\u8ddf\u7740\u76ee\u6807\u4e13\u4e1a\u7684\u57f9\u517b\u65b9\u6848\u540c\u6b65\u9009\u8bfe,\u5426\u5219\u540e\u9762\u7684\u538b\u529b\u4f1a\u975e\u5e38\u5927\uff08\u4ec5\u9488\u5bf9\u6ca1\u5565\u57fa\u7840\u7684\u540c\u5b66\uff0c\u5927\u4f6c\u8bf7\u81ea\u884c\u5ffd\u89c6\uff09\u800c\u4e14\u9762\u8bd5\u65f6\u8001\u5e08\u53ef\u80fd\u4e5f\u4f1a\u8003\u8651\u4f60\u8f6c\u4e86\u540e\u80fd\u4e0d\u80fd\u8ddf\u4e0a\u8fdb\u5ea6\uff0c\u5982\u679c\u9009\u8bfe\u5b8c\u5168\u91cd\u5408\u8001\u5e08\u4e5f\u66f4\u613f\u610f\u8ba9\u4f60\u6765\u3002\u8fd9\u4e48\u5e72\u7684\u98ce\u9669\u4e5f\u86ee\u5927\u7684\uff0c\u6240\u4ee5\u6700\u597d\u6709\u628a\u63e1\u6216\u8005\u4e0b\u5b9a\u51b3\u5fc3\u624d\u8fd9\u4e48\u5e72\u3002</p>"},{"location":"#_7","title":"\u540e\u7eed\u53d1\u5c55","text":"<p>\u8f6c\u4e13\u4e1a\u6210\u529f\u662f\u4e00\u4e2a\u65b0\u7684\u5f00\u59cb\uff0c\u5e76\u4e0d\u4ee3\u8868\u53ef\u4ee5\u653e\u677e\u4e86\u3002\u5927\u4e00\u4e0a\u6ca1\u6709\u4e13\u4e1a\u8bfe\uff0c\u53ea\u8981\u4e0a\u8bfe\u8ba4\u771f\u542c\u4e86\u4f5c\u4e1a\u8ba4\u771f\u5b8c\u6210\u4e86\u90fd\u53ef\u4ee5\u53d6\u5f97\u4e0d\u9519\u7684\u6210\u7ee9\uff0c\u4f46\u5927\u4e00\u4e0b\u4e09\u95e8\u4e13\u4e1a\u8bfe\u5c31\u6709\u70b9\u5403\u4e0d\u6d88\u4e86\u3002po\u662f\u5c0f\u767d\uff0c\u8fd9\u5b66\u671f\u5b66\u79bb\u6563\uff0cfds\uff0c\u6570\u903b\uff08\u771f\u5bf9\u4e0d\u8d77\uff0c\u6ca1\u80fd\u8ba9\u6570\u903b\u5927\u4eba\u4f7f\u51fa\u5168\u529b\u2026\u2026\uff09\u52a0\u4e0a\u628a\u4e0b\u5b66\u671f\u7684\u8bfe\u62ff\u4e86\u95e8\u5230\u8fd9\u5b66\u671f\u4e0a\u5bfc\u81f4\u6ca1\u65f6\u95f4\u505a\u597d\u51c6\u5907\u6210\u7ee9\uff08\u6570\u7406\u57fa\u7840\u8bfe\u8fd8\u597d\uff0c\u4e13\u4e1a\u8bfe\u2026\u2026\uff09\u53d7\u4e86\u5f71\u54cd\uff08\u7b97\u4e86\u4e0d\u4e3a\u81ea\u5df1\u5f00\u8131\u4e86\u2026\u2026\uff09</p> <p>\u6b64\u5916\uff0c\u5982\u679c\u662f\u62b1\u7740\u201c\u5148\u8f6c\u8fdb\u6765\u518d\u8bf4\u201d\u7684\u5fc3\u6001\uff0c\u5176\u5b9e\u662f\u4e0d\u5efa\u8bae\u8f6c\u4e13\u4e1a\u7684\uff1a\u4f60\u8f6c\u4e13\u4e1a\u7684\u539f\u56e0\u662f\u4f60\u559c\u6b22\uff08\u518d\u964d\u4e00\u70b9\u5427\uff0c\u81f3\u5c11\u6bd4\u8d77\u5176\u4ed6\u66f4\u6709\u611f\u89c9\uff09\u8fd9\u4e2a\u4e13\u4e1a\u5e76\u4e14\u4ed8\u8bf8\u884c\u52a8\uff0c\u800c\u4e0d\u53ea\u662f\u4e3a\u4e86\u62ff\u5230\u4e00\u5f20\u67d0\u4e2a\u4e13\u4e1a\u7684\u5b66\u58eb\u5b66\u4f4d\u8bc1\u4e66\u60f3\u7740\u4ee5\u540e\u627e\u5de5\u4f5c\u66f4\u6709\u4f18\u52bf\u3002\u6240\u4ee5\u5bf9\u4e0b\u5b9a\u51b3\u5fc3\u8981\u8f6c\u4e13\u4e1a\u7684\u540c\u5b66\uff0c\u5e0c\u671b\u4f60\u4eec\u8003\u8651\u957f\u8fdc\uff0c\u505a\u597d\u5f53\u4e0b\u4e0e\u672a\u6765\u7684\u89c4\u5212\uff0c\u8fd9\u6837\u5bf9\u4f60\u8f6c\u4e13\u4e1a\u6210\u529f\u540e\u7684\u53d1\u5c55\u5927\u6709\u88e8\u76ca\u3002</p>"},{"location":"#jk","title":"\u4e00\u70b9\u79c1\u8d27 \u8fd9\u5b66\u671f\u5728jk\u7684\u611f\u53d7","text":"<p>jk\u662f\u4e0d\u9519\u7684\u4e13\u4e1a\uff0c\u4e5f\u662fzju\u7684\u70ed\u95e8\u4e13\u4e1a\uff0c\u4f46\u662f\u5b66\u4e1a\u538b\u529b\u4e0e\u7ade\u4e89\u538b\u529b\u90fd\u633a\u5927\u7684\u3002</p> <p>\u8f6c\u8fdb\u6765\u524d\u89c9\u5f97\u81ea\u5df1\u90fd\u80fd\u625b\u4e0b\u6765\uff0c\u8f6c\u8fdb\u6765\u540e\u53d1\u73b0\u81ea\u5df1\u53ea\u80fd\u625b\u4e0b\u6765\u2026\u2026\u8fd9\u5b66\u671f\u7684\u671f\u672b\u6708\u975e\u5e38\u6781\u9650\uff1a\u4e3a\u4e86\u505a\u6570\u903b\u5927\u7a0b\u6574\u4e2a\u7aef\u5348\u90fd\u732e\u7ed9\u4e86\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60VGA,PS2,IP core\u4ee5\u53ca\u624b\u6413500\u884c\u4ee3\u7801\uff0c\u8fde\u7eed\u51e0\u5929\u5728\u5b9e\u9a8c\u5ba4\u4ece\u65e9\u5f85\u5230\u665a\uff0c\u7ec8\u4e8e\u57286.14\u505a\u51fa\u4e86\u4e2a\u52c9\u5f3a\u80fd\u73a9\u7684\u73a9\u610f\u513f\uff0c\u5728\u6b64\u5efa\u8bae\u5927\u5bb6\u63d0\u65e9\u4e24\u5468\u5f00\u59cb\u505a\u5927\u7a0b\uff08\u5982\u679c\u4f60\u51c6\u5907solo\u7684\u8bdd\uff09\u3002\u671f\u672b\u5468\u6bcf\u79d1\u521a\u597d\u6709\u4e00\u5929\u7684\u65f6\u95f4\u590d\u4e60\uff08\u4f46\u51e1\u5c11\u4e00\u5929\u5c31\u4f1a\u7206\u70b8\uff09\u4ece\u65e9\u5230\u665a\u90fd\u5728\u4e1c1B\u7684\u81ea\u4e60\u5ba4\u8865\u5929\u2026\u2026\uff08\u8fd9\u4e9b\u602a\u6211\u4e0d\u602ajk\uff0c\u662f\u6211\u4e4b\u524d\u6ca1\u505a\u597d\u76f8\u5e94\u7684\u51c6\u5907\uff0c\u4f46\u4e5f\u8bf4\u660e\u5728jk\u517b\u8001\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5bf9\u4e8e\u57fa\u7840\u8584\u5f31\u7684\u540c\u5b66\u800c\u8a00\u66f4\u662f\u8981\u52aa\u529b\u624d\u53ef\u80fd\u4e0d\u6389\u961f\uff09</p> <p>\u5f53\u7136\u597d\u5904\u662f\u5728jk\u4e5f\u80fd\u89c1\u5230\u5404\u79cd\u5404\u6837\u7684\u4f6c\uff0c\u4f60\u6c38\u8fdc\u4e0d\u7f3a\u5b66\u4e60\u699c\u6837\uff0c\u8fd9\u4e5f\u662f\u6211\u6765jk\u7684\u539f\u56e0\u4e4b\u4e00\u3002</p> <p>\u6700\u540e\u795d\u5927\u5bb6\u90fd\u80fd\u8fdb\u5165\u5fc3\u4eea\u7684\u4e13\u4e1a\uff01  \uff08\u67d0\u5929\u9ec4\u660f\u505a\u5b8c\u6570\u903blab\u4ece\u5b9e\u9a8c\u5ba4\u51fa\u6765\u65f6\u62cd\u5230\u7684\uff09</p>"},{"location":"#_8","title":"\u8ba1\u7b97\u673a\u5b66\u79d1\u7d20\u517b\u901f\u6210\u8bfe\u7a0b","text":""},{"location":"#compression","title":"compression","text":"<p>1.\u6709\u635f\u538b\u7f29\uff1a\u4e00\u822c\u7528\u4e8e\u4eba\u7c7b\u611f\u77e5\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5982\u56fe\u7247\uff0c\u97f3\u9891\u3002\u6b63\u662f\u56e0\u4e3a\u538b\u7f29\u5bfc\u81f4\u7535\u8bdd\u91cc\u7684\u58f0\u97f3\u4e0e\u6b63\u5e38\u7684\u4eba\u58f0\u6709\u6240\u533a\u522b</p> <p>+\u5408\u5e76bit\u5757\uff1a\u4e0d\u5408\u5e76\u4f8b\u5982raw\u683c\u5f0f\uff0c\u4f1a\u6bd4JPEG\u66f4\u5927</p> <p>+\u89c6\u9891\uff1a\u4ec5\u50a8\u5b58\u53d8\u5316\uff0c\u7528\u8272\u5757\u7684\u7b80\u5355\u8fd0\u52a8\u6765\u63cf\u8ff0\u53d8\u5316\uff0c\u4f46\u662f\u5f53\u538b\u7f29\u8fc7\u5ea6\u65f6\u4f1a\u51fa\u73b0\u9519\u8bef</p> <p>+\u53bb\u9664\u8d85\u58f0\u6ce2\uff1a\u4eba\u8033\u65e0\u6cd5\u611f\u77e5\u7684\u58f0\u97f3\u4fe1\u53f7</p> <p>2.\u65e0\u635f\u538b\u7f29\uff1a</p> <p>+\u56fe\u7247\uff1a</p> <p>\u6e38\u7a0b\u538b\u7f29\uff0c\u901a\u8fc7\u6807\u8bb0byte\u6570\u91cf\u5b9e\u73b0\u538b\u7f29\uff0c\u4f46\u6709\u53ef\u80fd\u538b\u7f29\u540e\u53cd\u800c\u53d8\u5927\uff08\u56fe\u7247\u4fe1\u606f\u788e\u7247\u5316\uff09</p> <p>DFTBA\uff1a\u5c06\u56fe\u7247\u4fe1\u606f\u6574\u5408\u6210\u66f4\u5927\u7684\u5757\u5e76\u5bf9\u5757\u8fdb\u884c\u7f16\u7801\uff0c\u6ce8\u610f\u4f20\u8f93\u6570\u636e\u65f6\u9700\u8981\u5c06\u7f16\u7801\u4e0e\u5757\u7684\u5bf9\u5e94\u4fe1\u606f\u4e00\u5e76\u4f20\u9012</p>"},{"location":"#file-system","title":"file system","text":""},{"location":"#menu-document","title":"menu document","text":"<p>\u50a8\u5b58\u6587\u4ef6\u4fe1\u606f\u7684\u6587\u4ef6\uff0c\u800c\u4e00\u822c\u6587\u4ef6\u53ea\u662f\u50a8\u5b58\u6570\u636e\u3002</p> <p>including: name, creation time, time of last modification,owner,type(read/write), address</p> <p>fragmentation/defragmentation;</p> <p>hierarchical file system:still used today</p>"},{"location":"#lazy-deletion","title":"lazy deletion\uff1a","text":"<p>\u5220\u9664\u65f6\u5e76\u6ca1\u6709\u771f\u6b63\u64e6\u9664\u8be5\u4f4d\u7f6e\u7684\u6587\u4ef6\uff0c\u53ea\u662f\u5728\u76ee\u5f55\u4e2d\u5220\u53bb\u4e86\u6587\u4ef6\u4fe1\u606f\u5e76\u4e14\u5728\u4e0b\u6b21\u5199\u5165\u65f6\u53ef\u4ee5\u66f4\u6539\u8be5\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u6b63\u56e0\u5982\u6b64\u67d0\u4e9b\u5df2\u7ecf\u5f7b\u5e95\u5220\u9664\u7684\u6587\u4ef6\u4ecd\u6709\u53ef\u80fd\u4ece\u7535\u8111\u4e2d\u6062\u590d\u3002</p>"},{"location":"#storage","title":"storage","text":""},{"location":"#hard-disk-drive","title":"hard disk drive","text":"<p>read and write from magnetic tape</p> <p>not volatile</p>"},{"location":"#memory-hierarchy","title":"memory hierarchy","text":"<p>cpu register</p> <p>cpu cache:import a block of instructions from ram at a time/not committing changes to ram immediately-&gt;dirty bits sync</p> <p>ram</p> <p>flash/usb memory</p> <p>hard drives</p>"},{"location":"#os","title":"OS","text":"<p>core functionality:kernal  ----in charge of memory management/ I/O control / multitasking</p>"},{"location":"#kernal-protection","title":"kernal protection","text":"<p>once collapsed, you can restart to make it back to normal</p>"},{"location":"#dynamic-memroy-allocation","title":"dynamic memroy allocation","text":"<p>virtual rom</p> <p>assume that the storage space is consistent in computers</p>"},{"location":"#memory-protection","title":"memory protection","text":"<p>information of different applications is assigned to different parts to prevent interferences</p>"},{"location":"#ic","title":"IC","text":"<p>from vaccum tubes to transistors</p>"},{"location":"#pcb","title":"PCB","text":"<p>standardized,easy to produce in large scale,helping to connect different parts of computers</p>"},{"location":"#production","title":"production","text":"<p>pure sillicon slices,covered by oxide and then covered by a kind of material that will resolve once exposed to light.</p> <p>steam penetration</p>"},{"location":"#command-line-interfaces","title":"Command line interfaces","text":"<p>easy to access computers that are faraway</p> <p>simple but useful</p> <p>evolve from teletype machines</p> <p>meet the needs of human-computer interaction</p> <p>the computers equipped with interactive functions are primitive terminals</p> <p>defect: not intuitive</p>"},{"location":"#display","title":"display","text":"<p>two ways to generate pictures: vector scaning and raster scaning </p> <p>bit maps are not the original way of representing pictures since they take up much space</p> <p>the hardpiece which is in charge of transforming from numbers to characters is the original form of GPU</p>"},{"location":"#development-of-cs-during-the-cold-war","title":"development of cs during the cold war","text":"<p>the governments paved the way for the development of PC during the cold war</p>"},{"location":"#development-of-personal-computers","title":"development of personal computers","text":"<p>IBM compatible</p> <p>electronic devices for consumers</p>"},{"location":"#3d-grahics","title":"3D grahics","text":""},{"location":"#principle","title":"principle","text":"<p>we calculate the position of the object in three dimension space and then project it onto the scree</p> <ul> <li> <p>Orthogonal projection</p> </li> <li> <p>perspective projection:two paralell lines will eventually intersect,like our sight</p> </li> </ul>"},{"location":"#polygon","title":"polygon","text":"<p>we choose triangles to represent a plane because we can not guarantee that four dots are on one plane</p> <p>numerous triangles construct one 3D object</p>"},{"location":"#rendering","title":"rendering","text":""},{"location":"#scanline-rendering","title":"scanline rendering","text":"<p>the graph is not smooth</p>"},{"location":"#antialiasing","title":"antialiasing","text":"<p>for pixels on the border, choose the color in between to make it mild to your eyes</p>"},{"location":"#occlusion-relations","title":"occlusion relations","text":"<ul> <li> <p>sorting the polygons first the rendering them from far to close</p> </li> <li> <p>calculating the distances of each pixel first,however when the occluded parts are at the same distances the results are unpredictable(flickering)</p> </li> </ul>"},{"location":"#lighting","title":"lighting","text":"<p>using geometric methods to calculate the brightness of each part to make it 3 dimensionally vivid</p>"},{"location":"#texturecoloring","title":"texture/coloring","text":"<p>the information are stored in ram (gpu ram)</p>"},{"location":"#outsideinside","title":"outside\\inside","text":"<p>we usually calculate outside only</p>"},{"location":"#computer-network","title":"computer network","text":""},{"location":"#routing","title":"routing","text":"<p>to decide to where it send data packets</p> <p>switches: divide the network into smaller parts</p>"},{"location":"#protocols","title":"protocols","text":"<p>IP:IP addresses(computers) and port name(applications). </p> <p>UDP:simple(data might lost) however fast</p> <p>TCP/IP:guarantee that no packets are lost and packets can be sent at one time, but the price is less data can be transmitted at one time</p> <p>packets have sequence,therefore we can send them simultaneously</p> <p>ICMP</p>"},{"location":"#medium","title":"medium","text":"<p>cables: when two signals transmit at the same time it may cause chaos(expotential waiting time to solve conjestion)</p> <p>wifi:magnetic waves</p>"},{"location":"#dns-server","title":"DNS server","text":"<p>translator</p> <p>if failed:return numbers</p> <p>eg. 404:the page not found</p> <p>400~499:error occurred on the client side</p>"},{"location":"#layers-of-network","title":"layers of network","text":""},{"location":"#world-wide-web","title":"World Wide Web","text":""},{"location":"#introduction","title":"introduction","text":"<p>different from the internet,www is based on the internet.</p> <p>internet: lines/tubes</p> <p>www: an information system that enables content sharing over the internet</p>"},{"location":"#urlunified-resources-locator","title":"URL:unified resources locator","text":"<p>helping to locate certain webpage</p> <p>unique</p> <p>language:html</p>"},{"location":"#information-transmission-protocol","title":"information transmission protocol","text":"<p>http:only text, no encryption</p> <p>https:safer</p>"},{"location":"#browser-searching-engine","title":"browser-&gt;searching engine","text":"<p>crawler:finding links</p> <p>web-rank algorithm</p>"},{"location":"#hackers","title":"hackers","text":"<p>attack on SQL: stack overflow</p> <p>overwrite the info</p>"},{"location":"#encrption","title":"Encrption","text":"<p>modern encryption is basd on complexity</p>"},{"location":"#exchange-key","title":"exchange key","text":"<p>symmetric encryption: one way function makes it possible.We can share the same key without sending it via internet</p> <p>e.g result :A^x mod B:A,B can be public and the result might be leaked but still hackers don't know the key x(especially when it is a large number)</p>"},{"location":"#asymmetric-encryption","title":"asymmetric encryption","text":"<p>private key is private.public key is public</p> <p>digital signature is based on it </p>"},{"location":"#mlcvnlp","title":"ML/CV/NLP","text":"<p>ML is different from AI, it is one foundation of AI.Machines learn by getting close to the right answer.</p> <p>CV: now using CNN</p> <p></p>"},{"location":"#pythoncs61a","title":"\u65b0\u7ae0\u8282\uff1apython\u5b66\u4e60\u4e4bCS61A","text":""},{"location":"#basic-knowledge","title":"basic knowledge","text":"<p>+very demanding on format:python uses indentation to distinguish between different code-blocks</p> <p>+object-oriented</p> <p>+for normal statements,execute it immediately;for functions,store the body waiting to be called</p>"},{"location":"#terminology","title":"terminology","text":"<p>+interpreter:different from compiler,it can execute your code while you are writing,while still you can first write it in your text editor then run it just like C</p> <p>frame</p>"},{"location":"#operations","title":"operations","text":"<p>+import lib functions</p> <p>1.</p> <pre><code>import math\nmath.sqrt(4)\n</code></pre> <p>2.</p> <pre><code>from math import sqrt\nsqrt(4)\n</code></pre> <p>three different ways to do the division: /,//,%   / will transform the operand into float automatically,even if the result is an integer</p>"},{"location":"#format","title":"format","text":"<p>no need to declare the variable before using it</p> <p>function:</p> <pre><code>def hailstone(digit,num):\n    if digit==1:\n        print(digit)\n        print('the number of steps is:',num)\n        return num\n    if digit%2==0:\n        print(digit)\n        hailstone(int(digit/2),num+1)\n    if digit%2==1:\n        print(digit)\n        hailstone(digit*3+1,num+1)\n    return None\n</code></pre>"},{"location":"#inputoutput","title":"input/output","text":"<pre><code>a,b=input().split()   #inputs are all treated as strings,*.split()* helps to divide the inputs,w\nprint('%s %s'%(a,b))  #no comma in between\n</code></pre> <p>+all inputs are perceived as strings(),so transformation is needed.</p> <p>however when we define a function we don't necessarily need to label the input type,rather it is when we call the function that we need to declare its type</p> <pre><code>a,b=map(lambda x:int (x),input('input your data').split()) #format:(the func you choose,input)\n</code></pre> <p>+for outputs,we can choose one format to output(similar to C except ',')</p>"},{"location":"#basic-functions","title":"basic functions","text":"<p>many libs provide plenty of functions,which is a great advantage of python</p>"},{"location":"#data-structure","title":"data structure","text":"\u7c7b\u578b \u6709\u5e8f\u6027 \u53ef\u53d8\u6027 \u5141\u8bb8\u91cd\u590d \u5141\u8bb8\u4e0d\u540c\u7c7b\u578b \u5217\u8868 \u6709\u5e8f \u53ef\u53d8 \u5141\u8bb8 \u5141\u8bb8 \u5143\u7ec4 \u6709\u5e8f \u4e0d\u53ef \u5141\u8bb8 \u5141\u8bb8 \u96c6\u5408 \u65e0\u5e8f \u53ef\u53d8 \u4e0d\u5141\u8bb8 \u5141\u8bb8\uff08\u5fc5\u987b\u4e0d\u53d8\u5143\u7d20\uff09 \u5b57\u5178 \u65e0\u5e8f \u53ef\u53d8 \u4e0d\u5141\u8bb8 \u5141\u8bb8\uff08\u503c\u4e0d\u540c\u7c7b\uff09"},{"location":"#operation-on-containers","title":"operation on containers","text":""},{"location":"#slicing","title":"slicing","text":"<p>[x for x in range(10) if x % 3 == 0]</p> <p>{2*x: x for x in c}</p> <p>list()</p>"},{"location":"#summaxall","title":"sum/max/all","text":"<p>=&gt;they all need parameter to be iterable</p> <p>sum: sum([1,2,3],4)/sum([[1,2,3],[4,5]],[])</p> <p>max: max(range(10),key=lambda x: 7-(x-5)(x-7))</p> <p>attention: range() returns a list of integers</p> <p>all: resembles 'and' logic in function</p>"},{"location":"#strings","title":"strings","text":"<p>A kind of abstraction</p> <p>strings are a type of sequence</p> <p>abstraction</p>"},{"location":"#tree","title":"Tree","text":""},{"location":"#basic-operations","title":"basic operations:","text":""},{"location":"#data-abstraction","title":"Data abstraction","text":"<p>conceal the data and corresponding operations so as to simplify complexity</p> <p>do not violate abstraction barriers</p> <pre><code>class Account:\n    def __init__(self, balance):\n        self.__balance = balance  # \u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u9690\u85cf\u5c5e\u6027\n\n    def deposit(self, amount):\n        self.__balance += amount\n\n    def withdraw(self, amount):\n        if amount &lt;= self.__balance:\n            self.__balance -= amount\n            return amount\n        else:\n            raise ValueError(\"Insufficient funds\")\n\n    def get_balance(self):\n        return self.__balance\n\n\naccount = Account(100)\nprint(account.get_balance())  # \u6b63\u786e\u4f7f\u7528\u63a5\u53e3\u83b7\u53d6\u4f59\u989d\n\n# \u8fdd\u53cd\u62bd\u8c61\u5c4f\u969c\uff0c\u76f4\u63a5\u4fee\u6539\u9690\u85cf\u5c5e\u6027\naccount._Account__balance = 1000\nprint(account.get_balance())  # \u8f93\u51fa: 1000\n\n</code></pre>"},{"location":"#mutability","title":"Mutability","text":"<p>encoding:</p> <p>unicode(contains ascii,a total of 109000 objects)-&gt;utf-8 </p> <p>the length of the encoding of unicode object vary from 1 to 4 </p> <p>operations:</p> <pre><code>from unicodedata import name,lookup\nlookup('SNOWMAN')\nname('A')\nlookup('WHITE SMILE FACE').encode()\n'A'.encode\n</code></pre>"},{"location":"#mutation","title":"Mutation","text":"<p>two objects are the same / equal(one thing)</p> <p>\u4e24\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e24\u4e2a\u53d8\u91cf\u7b49\u4ef7\uff0c\u53d8\u5316\u540c\u6b65</p> <p>\u4e24\u4e2a\u53d8\u91cf\u6307\u5411\u4e0d\u540c\u5bf9\u8c61\u4f46\u662f\u5bf9\u8c61\u7684\u503c\u76f8\u540c\uff0c\u4e24\u4e2a\u53d8\u91cf\u76f8\u7b49\uff0c\u4f46\u53d8\u5316\u4e0d\u540c\u6b65</p> <p>python\u4e2d\u4f20\u53c2\u57fa\u4e8e\u53d8\u91cf\u7684\u5f15\u7528\u800c\u4e0d\u662f\u53d8\u91cf\u7684\u590d\u5236\uff0c\u5bf9\u4e8e\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff08\u6574\u6570\uff0c\u6d6e\u70b9\uff0c\u5b57\u7b26\u4e32\uff09\uff0c\u66f4\u6539\u5c06\u4f1a\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff1b\u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\u4fee\u6539\u4f1a\u4f20\u9012\u5230\u51fd\u6570\u5916\u90e8</p> <p>\u5143\u7ec4\u4e0d\u53ef\u53d8\uff0c\u4f46\u5176\u5143\u7d20\u53ef\u4ee5\u4e3a\u53ef\u53d8\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6539\u53d8\u53ef\u53d8\u5bf9\u8c61\u7684\u503c</p> <p>\u5b57\u5178\u7684\u952e\u5fc5\u987b\u4e3a\u53ef\u54c8\u5e0c\u7684\uff08\u5373\u4e0d\u53ef\u53d8\u7684\uff09\uff0c\u5426\u5219\u6539\u53d8\u952e\u4f1a\u4f7f\u5f97\u503c\u4e0d\u53ef\u67e5\u8be2\uff0c\u6240\u4ee5\u5982\u679c\u952e\u4e3a\u542b\u6709\u53ef\u53d8\u5bf9\u8c61\u7684\u5143\u7ec4\u4f9d\u7136\u975e\u6cd5</p> <p>\u8fa8\u6790\uff1a\u5f15\u7528\u8d4b\u503c\uff0c\u6d45\u62f7\u8d1d\uff08\u62f7\u8d1d\u7ed3\u6784\uff0c\u5143\u7d20\u672c\u8eab\u4ecd\u7136\u662f\u5f15\u7528\uff09\u4e0e\u6df1\u62f7\u8d1d\uff08\u5b8c\u5168\u62f7\u8d1d\uff09</p> <p>\u53d8\u91cf\u6307\u5411\u5bf9\u8c61\uff0c\u662f\u5426\u53d8\u5316\u7684\u5173\u952e\u53d6\u51b3\u4e8e\u5bf9\u8c61\u662f\u5426\u53ef\u53d8</p>"},{"location":"#mutable-function","title":"Mutable Function","text":"<p>default argument value: \u9ed8\u8ba4\u53c2\u6570\u5fc5\u987b\u5728\u975e\u9ed8\u8ba4\u53c2\u6570\u4e4b\u540e\uff0c\u5728\u9ed8\u8ba4\u53c2\u6570\u503c\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u8ba1\u7b97\u4e00\u6b21\uff0c\u5e76\u4e14\u5728\u540e\u7eed\u7684\u51fd\u6570\u8c03\u7528\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u5bf9\u8c61\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u9ed8\u8ba4\u503c\u662f\u4e00\u4e2a\u53ef\u53d8\u5bf9\u8c61\uff08\u4f8b\u5982\u5217\u8868\u3001\u5b57\u5178\u6216\u81ea\u5b9a\u4e49\u5bf9\u8c61\uff09\uff0c\u5e76\u4e14\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u4e86\u8be5\u5bf9\u8c61\uff0c\u90a3\u4e48\u540e\u7eed\u7684\u51fd\u6570\u8c03\u7528\u5c06\u5171\u4eab\u8be5\u4fee\u6539\u540e\u7684\u5bf9\u8c61\u3002\u8fd9\u901a\u5e38\u4f1a\u5bfc\u81f4\u610f\u60f3\u4e0d\u5230\u7684\u884c\u4e3a\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528'None'\u4f5c\u4e3a\u9ed8\u8ba4\u503c</p>"},{"location":"#partitions","title":"Partitions","text":"<p>partition</p> <pre><code>def list_partitions(n,m):\n    if n&lt;0 or m == 0:\n        return []\n    else:\n        exact = []\n        if m == n:\n            exact = [[m]]\n        with_m = [[m]+p for p in list_partitions(n-m, m)]\n        without_m = list_partitions(n, m-1)\n        return exact +with_m +without_m \n\n\ndef list_partitions(n,m):\n    if n&lt;0 or m == 0:\n        return []\n    else:\n        exact = []\n        if m == n:\n            exact = [str(m)]\n        with_m = [str(m)+'+'+p for p in list_partitions(n-m, m)]\n        without_m = list_partitions(n, m-1)\n        return exact +with_m +without_m \n</code></pre>"},{"location":"#iterators-and-generators","title":"iterators and generators","text":""},{"location":"#_9","title":"\u53ef\u8fed\u4ee3\u5bf9\u8c61\u548c\u8fed\u4ee3\u5668\u5bf9\u8c61","text":"<p>\u8fed\u4ee3\u5668\uff08iterator\uff09\uff1a iter\uff08\uff09\u6216\u8005 call function that returns a generator </p> <p>\u4e00\u6b21\u6027\uff0c\u53ef\u7528next\u8fdb\u884c\u8c03\u7528\uff0c\u4e5f\u53ef\u7528list\u4e00\u6b21\u6027\u5b8c\u6210\u8f93\u51fa</p> <p>yield \u548c yield from\uff08\u591a\u4e2a\uff09</p> <p>\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08iterable\uff09\uff1a\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8fed\u4ee3\u5668\u7684\u5bf9\u8c61</p> <p>\u5b9e\u4f8b\uff1a</p> <pre><code>def list_max(n,m):\n    match = 0\n    if n&lt;0 or m == 0:\n        return 0\n    elif n == m:\n        match = 1\n    a = list_max(n-m,m)\n    b = list_max(n,m-1)\n    return a + b + match\n\nver2:\n\ndef printlist(n,m):\n    if n &lt; 0 or m == 0:\n        return []\n    else:\n        a = [ str(m) + p for p in printlist(n-m,m)]\n        b = [q for q in printlist(n,m-1)]\n    return  a + b\n\n\ndef printlist(n,m):\n    match = []\n    if n &lt; 0 or m == 0:\n        return []\n    elif n == m:\n        match = [[str(m)]]\n    a = [p + [str(m)] for p in printlist(n-m,m)]\n    b = [q for q in printlist(n,m-1)]\n    return match + a + b\n\ndef printlist_v2(n,m):\n    if n&gt;=0 and m != 0:\n        if n == m:\n            yield [str(m)]\n        for p in printlist_v2(n-m,m):\n            yield [str(m)]+ p\n        yield from printlist_v2(n,m-1)\n</code></pre>"},{"location":"#zip","title":"zip \u51fd\u6570","text":"<p>bind elements in different iterables </p> <p>return an iterator</p>"},{"location":"#dictionary-iterators","title":"dictionary iterators","text":"<p>d.keys()   d.values()</p>"},{"location":"#efficiency","title":"Efficiency","text":"<p>similar to that in C</p> <p>compute efficiency:both time and space</p> <pre><code>\ndef count_calls(f):\n    def counted(n):\n        counted.countnum += 1\n        return f(n)\n    counted.countnum == 0\n    return counted\n\ndef fib(n):\n    if n == 0 or n == 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\ndef count_frames(f):\n    def counted(n):\n        counted.countnum += 1\n        if counted.max &lt; counted.countnum:\n            counted.max = counted.countnum\n        result = f(n)\n        counted.countnum -= 1\n        return result\n    counted.max = 0\n    counted.countnum = 0\n    return counted\n</code></pre>"},{"location":"#memoization","title":"Memoization","text":"<p>reduce time complexity at the cost of increasing space complexity</p> <p>Memo version of fib :</p> <pre><code>def func_memo(f):\n    cache = {}\n    def func(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return func\n</code></pre> <p>\u4f7f\u7528\u4e00\u4e2a\u7a7a\u7684\u5927\u62ec\u53f7\u5b9a\u4e49\u4f1a\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u800c\u975e\u96c6\u5408</p> <p>\u96c6\u5408\u4e0d\u53ef\u4e0b\u6807</p> <p>empty_set = set() \u5b9a\u4e49\u7a7a\u96c6\u5408</p>"},{"location":"#object-and-inheritance","title":"object and inheritance","text":"<pre><code>class A:\n    z = -1\n    def f(self,x):\n        return B(x-1)\n\nclass B(A):\n    n = 4\n    def __init__(self,y):\n        if y:\n            self.z = self.f(y)\n        else:\n            self.z = C(y+1)\n\nclass C(B):\n    def f(self,x):\n        return x\n\na = A()\n\nb = B(1)\n\nb.n = 5\n\nb.z.z.z = 1\n</code></pre> <p>each time you call A,B or C a new object is created</p> <p>b : B(1)</p> <p>b.z = self.f(y)--&gt;B(0)</p> <p>b.z.z = B(0).z--&gt;C(1)</p> <p>b.z.z.z = C(1).z--&gt;init(self,1)--&gt;self.f(1)--&gt;1</p> <p>b.z.z.z.z = 1.z--&gt;error</p>"},{"location":"#method","title":"method","text":"<pre><code>class cls:\n    def __init__(self):\n        return 0\n    def func1(cls):\n        return 1\n    def func2(self,param1):\n        return 2\n    def _func2(self):\n        return 3\n    def __func2(self):\n        return 4\n    def __func2__(self):\n        return 5\n</code></pre> <p>\u5355\u4e0b\u5212\u7ebf\uff1a\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u4e60\u60ef\u6027\u7684\u683c\u5f0f</p> <p>\u524d\u53cc\u4e0b\u5212\u7ebf\uff1a\u8c03\u7528\u65f6\u683c\u5f0fobj._classname__func2()</p> <p>\u524d\u540e\u53cc\u4e0b\u5212\u7ebf\uff1aspecial method\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u800c\u4e0d\u9700\u8981\u624b\u52a8\u89e6\u53d1\uff08\u4f8b\u5982\u5b9e\u4f8b\u5316eg = class\uff09</p> <p>obj.func()\u4e2donj\u5b9e\u4f8b\u672c\u8eab\u5c31\u5145\u5f53\u4e00\u4e2a\u53c2\u6570</p>"},{"location":"#strings_1","title":"strings","text":"<pre><code>print(f'welcome to {str1} {str2}')\n\nprint('welcome to {str1} {str2}'.format('my','world'))\n</code></pre> <p>string interpolation : evaluate a string literal that contains expression</p>"},{"location":"#inheritance-and-attribute-lookup","title":"inheritance and attribute lookup","text":"<p>subclass is a special form of base class</p> <p>inheritance is a one way road</p> <p></p> <p>mulltiple inheritance</p> <p>class C(A,B,D):</p>"},{"location":"#class-statements","title":"class statements","text":"<p>here class resembles struct datatype in C</p> <pre><code>class Bank():\n    Bank.interest = 0.03\n    accounts = {}\n    def open_account(name,password,money):\n        if name in accounts and accounts[name].password == password:\n            print('already exists')\n        else:\n            account = Account(name,password,money)\n            accounts.setdefault('name',account)\n    def log_in():\n        if \nclass Account(Bank):\n    def __init__(self,money,type)\n\nclass Tree():\n    def __init__(self,val,rest=[]):\n        self.value = value\n        self.rest = rest\n\n</code></pre> <p>\u8fa8\u6790\uff1ainheritance and composition\uff1a</p> <p>inheritance:base--&gt;sub</p> <p>composition:contain--&gt;contained</p> <p>repr &amp; str:the former one is formatted,using python description</p>"},{"location":"#web-devcs571","title":"\u65b0\u7ae0\u8282\uff1aweb dev\u4e4bCS571","text":""},{"location":"#chapter-1intro","title":"CHAPTER 1\uff1aintro","text":"<p>basic web technologies:</p> <p>-HTML:structure</p> <p>-CSS:decoration</p> <p>-JS:interaction</p> <p>.json: a kind of data structure(not abstract,like txt for example)</p> <p>widely used to transmit data, since it is easy to get across to both humans and computers</p> <pre><code>{\n    \"name\":{\n        \"first\":\"xxx\",\n        \"last\":\"xxx\"\n    },\n    \"gender\":\"armed helicopter\",\n    \"age\":19,\n    \"num\":[35,31,23]\n}\n</code></pre> <p>the job of browsers are merely sending the requests and receiving data and then rendering it</p>"},{"location":"#format_1","title":"format","text":""},{"location":"#html","title":"html","text":"<pre><code>&lt;html&gt;\n    &lt;head&gt;&lt;br&gt;\n    &lt;br&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;table&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;&lt;/th&gt;\n                    &lt;th&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n        &lt;p&gt;&lt;/p&gt;&lt;br&gt;\n        &lt;ol&gt;\n            &lt;li&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/li&gt;\n        &lt;/ol&gt;\n        &lt;select&gt;\n            &lt;option&gt;&lt;/option&gt;\n            &lt;option&gt;&lt;/option&gt;\n        &lt;/select&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>+differentiate between  and welcome to zju</p>"},{"location":"#cssjavascript","title":"CSS&amp;Javascript","text":"<p>three ways to use CSS:</p> <p>1.inline</p> <p>2.internal</p> <p>3.external</p> <p>and the same principle applies to Javascript</p> <p>operations:</p> <p>CSS:</p> <ul> <li>in  <pre><code>&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n</code></pre> <ul> <li>in .css</li> </ul> <pre><code>.td{\n    color:firebrick;\n    font weight:300;\n}\n</code></pre> <p>html:</p> <ul> <li>use document to reference DOM</li> </ul> <p>document.getElementById/\u2026\u2026</p> <p>operations:</p> <p>key word :this     </p> <p>eg.</p> <pre><code>&lt;button onclick=\"name(this)\" id=\"btn1\"&gt;press to continue&lt;/button&gt;\n</code></pre> <pre><code>function name(target){\n    const con=document.getElementByTagName().value;\n    alert(target);\n    window.location.href=con;\n}\n</code></pre>"},{"location":"#conversions-between-js-object-and-json","title":"Conversions between JS object and JSON","text":""},{"location":"#the-slight-difference-in-syntax","title":"the slight difference in syntax","text":"<p>comments are not allowed in JSON</p> <p>key value pairs must be in \"\" in JSON</p>"},{"location":"#other-features","title":"other features","text":"<p>web programming is all about data</p> <p>data can only be transferred in the form of text,therefore----</p> <p>JSON.parse (objects are stored in heap,the variable for an object is actually a pointer)</p> <p>JSON.stringify</p> <p>if a variable is a const: it can not be reassigned yet its property can be reassigned</p> <p>ATTENTION: Since the variable type is hidden here in JS,we should be extra cautious when it comes to variable assignment</p>"},{"location":"#_10","title":"\u65b0\u7ae0\u8282\uff1a\u77ed\u5b66\u671f\u4e4b\u5927\u6570\u636e\u53ef\u89c6\u5316","text":""},{"location":"#data-workflow","title":"Data workflow","text":"<p>data platform-&gt;storage-&gt;acquision-&gt;</p>"},{"location":"#profiling","title":"profiling","text":""},{"location":"#data-overview","title":"data overview","text":"<p>data schema</p> <p>data quality</p> <p>domain</p>"},{"location":"#wrangling","title":"wrangling","text":"<p>sorting</p> <p>filter</p> <p>distinct:remove duplicate objects</p> <p>slice</p> <p>extract</p> <p>mutate</p> <p>replace</p> <p>split</p> <p>merge</p> <p>aggregate</p> <p>reshape</p> <p>join</p>"},{"location":"#modeling","title":"modeling","text":"<p>m</p>"}]}